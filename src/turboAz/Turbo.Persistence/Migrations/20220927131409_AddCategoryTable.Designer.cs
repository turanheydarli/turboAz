// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Turbo.Persistence.Contexts;

#nullable disable

namespace Turbo.Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20220927131409_AddCategoryTable")]
    partial class AddCategoryTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 27, 13, 14, 9, 32, DateTimeKind.Utc).AddTicks(1394),
                            Name = "BMW",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 27, 13, 14, 9, 32, DateTimeKind.Utc).AddTicks(1395),
                            Name = "Audi",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryOrder")
                        .HasColumnType("integer")
                        .HasColumnName("CategoryOrder");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int>("FeaturedOrder")
                        .HasColumnType("integer")
                        .HasColumnName("FeaturedOrder");

                    b.Property<int>("HomepageOrder")
                        .HasColumnType("integer")
                        .HasColumnName("HomepageOrder");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("boolean")
                        .HasColumnName("IsFeatured");

                    b.Property<string>("Keywords")
                        .HasColumnType("text")
                        .HasColumnName("Keywords");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.Property<bool>("ShowImageOnNavigation")
                        .HasColumnType("boolean")
                        .HasColumnName("ShowImageOnNavigation");

                    b.Property<bool>("ShowProductsOnIndex")
                        .HasColumnType("boolean")
                        .HasColumnName("ShowProductsOnIndex");

                    b.Property<string>("Slug")
                        .HasColumnType("text")
                        .HasColumnName("Slug");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated");

                    b.Property<bool>("Visibility")
                        .HasColumnType("boolean")
                        .HasColumnName("Visibility");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryOrder = 1,
                            Created = new DateTime(2022, 9, 27, 13, 14, 9, 32, DateTimeKind.Utc).AddTicks(1271),
                            Description = "Test Description",
                            FeaturedOrder = 1,
                            HomepageOrder = 1,
                            IsFeatured = true,
                            Keywords = "test,keyword",
                            Name = "Test",
                            ShowImageOnNavigation = true,
                            ShowProductsOnIndex = true,
                            Slug = "test",
                            Title = "Test Category Name",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Visibility = true
                        });
                });

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("BrandId");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Created = new DateTime(2022, 9, 27, 13, 14, 9, 32, DateTimeKind.Utc).AddTicks(1406),
                            ImageUrl = "",
                            Name = "M5",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Created = new DateTime(2022, 9, 27, 13, 14, 9, 32, DateTimeKind.Utc).AddTicks(1408),
                            ImageUrl = "",
                            Name = "I8",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Category", b =>
                {
                    b.HasOne("Turbo.Domain.Entities.Catalog.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Model", b =>
                {
                    b.HasOne("Turbo.Domain.Entities.Catalog.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Turbo.Domain.Entities.Catalog.Brand", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
